{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/app/post.service.ts","./src/app/post.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { PostService } from './post.service';\nimport { Component } from '@angular/core';\nimport {Post} from './post';\nimport {MatDialog} from '@angular/material/dialog';\nimport {PostDialogComponent} from './post-dialog/post-dialog.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meuapp';\n\n  public posts: Post[];\n\n  constructor (public dialog: MatDialog, public postService:PostService){\n\n  }\n\n  ngOnInit(){\n    this.posts = this.postService.posts;\n  }\n  openDialog(){\n    const dialogRef = this.dialog.open(PostDialogComponent,{\n      width:'600px'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result)=>{\n        if(result){\n            this.postService.salvar(result.post,result.arquivo)\n\n        }\n      }\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>Projeto Laravel</span>\n</mat-toolbar>\n\n<mat-divider></mat-divider>\n\n\n\n<!-- posts é o posts do app.components.ts-->\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\" >\n  <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post> \n</div>\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\n  <mat-icon>add</mat-icon>\n</button>","import { PostService } from './post.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule } from '@angular/material/button';\nimport {MatDialog } from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule\n  ],\n  providers: [PostService],\n  entryComponents: [\n    PostDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {Post} from './../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n   nomeArquivo: string='';\n\n   dados = {\n    post: new Post(\"\",\"\",\"\",\"\",\"\",\"\"),\n    arquivo:null\n  };\n  constructor(\n    public dialogRef: MatDialogRef<PostDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  mudouArquivo(event){\n    //console.log(event.target.files[0]);\n    this.nomeArquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar(){\n    this.dialogRef.close(this.dados);\n\n  }\n\n  cancelar(){\n    this.dialogRef.close(null);\n\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\" >\n    <div fxLayout=\"row\" fxLayoutAlign=\"space=between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu nome\" [(ngModel)]=\"dados.post.nome\">\n            <mat-hint>Digite aqui seu nome</mat-hint>\n        </mat-form-field>\n        \n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu email\" [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite aqui seu email</mat-hint>\n        </mat-form-field>\n\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"space=between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Titulo da mensagem\" [(ngModel)]=\"dados.post.titulo\">\n        \n        </mat-form-field>\n        \n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Subtitulo da mensagem\" [(ngModel)]=\"dados.post.subtitulo\">\n            \n        </mat-form-field>\n    </div>\n\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe aqui sua mensagem\" [(ngModel)]=\"dados.post.mensagem\">\n        </textarea>\n    </mat-form-field>\n</div>\n\n<input type=\"file\" style=\"display:none\" (change)=\"mudouArquivo($event)\" #fileinput>\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n\n    Adicionar uma Foto\n\n</button>\n<p *ngIf=\"nomeArquivo!=''\">\n    <strong>Arquivo: </strong> {{nomeArquivo}}\n    <mat-icon color=\"primary\">done</mat-icon>\n</p>\n<br>\n<br>\n\n<div style=\"text-align: center;\">\n    <button mat-button color=\"primary\" (click)=\"salvar()\">OK</button>\n    <button mat-button color=\"warn\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpEvent } from '@angular/common/http';\nimport {Post} from './post';\n\n@Injectable()\nexport class PostService {\n\n  public posts: Post[] = [];\n\n  constructor(private http: HttpClient) {\n    this.http.get(\"/api/post\").subscribe(\n      (posts:any[]) => {\n        for(let p of posts){\n          this.posts.push(new Post(p.nome,p.titulo,p.subtitulo,p.email,p.mensagem,p.arquivo, p.id,p.likes));\n        }\n\n      }\n    );\n  }\n\n  salvar(post:Post, file:File){\n    const uploadData = new FormData();\n    uploadData.append('nome',post.nome);\n    uploadData.append('email',post.email);\n    uploadData.append('titulo',post.titulo);\n    uploadData.append('subtitulo',post.subtitulo);\n    uploadData.append('mensagem',post.mensagem);\n    uploadData.append('arquivo',file,file.name);\n\n    \n\n    this.http.post(\"/api/post\",uploadData,\n      {reportProgress:true,observe:'events'}\n      ).subscribe(\n\n        (event: any)=>{\n\n          if(event.type==HttpEventType.Response){\n            let p:any = event.body;\n            this.posts.push(new Post(p.nome,p.titulo,p.subtitulo,p.email,p.mensagem,p.arquivo, p.id,p.likes))\n\n          }\n        }\n\n    )\n  }\n\n  like(id:number){\n    this.http.get(\"/api/post/\"+id+\"/like\").subscribe(\n      (event:any)=>{\n        let p = this.posts.find( (p) => p.id==id );\n        p.likes = event.likes;\n      }\n    );\n\n  }\n\n  apagar(id:number){\n    this.http.delete(\"api/post/\"+id).subscribe(\n      (event:any)=>{\n        \n        console.log(event);\n        let i = this.posts.findIndex( (p) => p.id==id );\n        if(i>=0)\n          this.posts.splice(i,1);\n      }\n    )\n  }\n}\n","export class Post{\r\n    constructor(\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n        ){}\r\n}\r\n","import { PostService } from './../post.service';\nimport { Component, OnInit,Input } from '@angular/core';\nimport {Post} from '../post';\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor(public postService: PostService ) { }\n\n  ngOnInit(): void {\n  }\n\n  like(){\n    this.postService.like(this.post.id);\n  }\n\n  apagar(){\n    this.postService.apagar(this.post.id);\n\n  }\n\n}\n","<mat-card class=\"card\" fxFlex>\n    <mat-card-header>\n      <div mat-card-avatar></div>\n      <mat-card-title>{{post.titulo}}</mat-card-title>\n      <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"/storage/{{post.arquivo}}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n        {{post.mensagem}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button color=\"primary\" (click)=\"like()\">LIKE</button>\n      <button mat-button color=\"warn\" (click)=\"apagar()\">APAGAR</button>\n\n      <mat-icon  color=\"warn\" *ngIf=\"post.likes>0\"\n        [matBadge] =\"post.likes\" matBadgePosition=\"above after\" matBadgeColor=\"warn\"   [matBadgeOverlap]=\"false\" >\n          favorite\n      </mat-icon>\n    </mat-card-actions>\n  </mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}